{"version":3,"sources":["actions/index.js","actions/isLoadingActions.js","actions/currentPage.js","Weater.js","Covid.js","components/TodoItem.js","components/TodoList.js","css/styled_components/StyledComponents.js","context/ViewportProvider.js","components/TodoContainer.js","img/github.svg","img/twitter.svg","img/mail.svg","components/Contact.js","layout/Nav.js","App.js","Root.js","reducers/isLoadingReducer.js","reducers/currentPageReducer.js","reducers/index.js","index.js"],"names":["allActions","isLoadingActions","reverse_status","console","log","type","setCurrentPage","currentPage","Weather","useState","data","setData","isLoading","useSelector","state","isLoadingReducer","dispatch","useDispatch","localStatus","setLocalStatus","lon","setLon","lat","setLat","useEffect","navigator","geolocation","getCurrentPosition","loc","coords","longitude","toString","latitude","fetch","then","res","json","className","style","color","margin","description","CovidDiv","styled","div","StyledLi","li","expressionList","Covid","situation","setSituation","tempArray","response","body","items","item","result","length","slice","push","e","map","one","onClick","stateDt","Math","round","random","decideCnt","deathCnt","create_dt","TodoItem","updateHandle","deleteHandle","todo","display","flexDirection","name","created_date","author","value","StyledUl_for_todo","ul","TodoList","idx","StyledUl","StyledForm","form","StyledInput","input","props","inputWidth","StyledH1","h1","H1ex","viewportContext","React","createContext","useViewport","useContext","width","height","ViewportProvider","children","window","innerWidth","setWidth","innerHeight","setHeight","handleWindowResize","addEventListener","removeEventListener","Provider","StyledTodoContainer","TodoContainer","setTodo","setAuthor","setDescription","onSubmit","preventDefault","formData","FormData","append","post","headers","method","onChange","target","newDescription","alignItems","get","getAttribute","newTodos","filter","ExStyledUl","backgroundColor","borderRadius","justifyContent","ExStyledLi","Contact","href","src","github","alt","twitter","mail","StyledNav","Styleda","a","StyledLink","Link","StyledAppName","Nav","to","StyledAppContainer","StyledVideo","video","App","currentTime","setCurrentTime","time","loop","autoPlay","containerHeight","path","Root","loadingStatusReducer","action","status","currentPageReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a2bfd7f.chunk.js","sourcesContent":["import isLoadingActions from \"./isLoadingActions\";\nimport setCurrentPage from \"./currentPage\";\n\nconst allActions = {\n  isLoadingActions,\n  setCurrentPage,\n};\n\nexport default allActions;\n","const reverse_status = () => {\n  console.log(\"reverse\");\n  return {\n    type: \"REVERSE\",\n  };\n};\n\nexport default {\n  reverse_status,\n};\n","const setCurrentPage = (currentPage) => {\n  console.log(\"current page\", currentPage);\n  return {\n    type: currentPage,\n  };\n};\nexport default setCurrentPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"./actions/index\";\nimport loading from \"./css/loading.css\";\n\nconst Weather = () => {\n  const [data, setData] = useState(\"\");\n  const isLoading = useSelector((state) => state.isLoadingReducer);\n  const dispatch = useDispatch();\n  const [localStatus, setLocalStatus] = useState(true);\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n\n  // 일단 도시 이름 나오게 함\n  // fetch and axios take response in different way\n  useEffect(() => {\n    if (navigator.geolocation) {\n      console.log(\"Available\");\n    } else {\n      console.log(\"Not Available\");\n    }\n    navigator.geolocation.getCurrentPosition((loc) => {\n      setLon(() => loc.coords.longitude.toString());\n      setLat(() => loc.coords.latitude.toString());\n    });\n    if (lat && lon) {\n      const result = fetch(`/api/weather?lon=${lon}&lat=${lat}`).then((res) =>\n        res\n          .json()\n          .then((data) => {\n            setData(data);\n          })\n          .then(() => {\n            dispatch(allActions.isLoadingActions.reverse_status());\n            setLocalStatus(isLoading[\"status\"]);\n          })\n      );\n    }\n  }, [lat, lon]);\n\n  if (localStatus)\n    return (\n      <div className=\"loader-container\">\n        <div className=\"loader\"></div>\n      </div>\n    );\n  return (\n    <div style={{ color: \"rgba(229, 229, 234)\", margin: \"1em\" }}>\n      {data\n        ? `${data[\"name\"]}의 날씨 : ${data[\"weather\"][0].description}`\n        : \"현재 날씨 정보 알 수 없음\"}\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst CovidDiv = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  color: #c7c7cc;\n`;\n\nconst StyledLi = styled.li`\n  decoration: none;\n`;\nconst expressionList = [\n  \"🚑\",\n  \"🚠\",\n  \"❌\",\n  \"❗\",\n  \"💉\",\n  \"💊\",\n  \"🥵\",\n  \"😱\",\n  \"🤧\",\n  \"🙀\",\n];\n\nconst Covid = () => {\n  const [situation, setSituation] = useState([]);\n\n  useEffect(() => {\n    let tempArray = [];\n    try {\n      fetch(\"/api/covid\").then((res) => {\n        res.json().then((data) => {\n          console.log(data.response.body.items.item);\n          const result = data.response.body.items.item;\n          console.log(result);\n          if (result.length > 1) {\n            setSituation(() => result.slice(0, 1));\n          } else if (!tempArray.length) {\n            tempArray.push(result);\n            setSituation(tempArray);\n          }\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  // 계속 에러가 난 이유는... 진짜 받아오기 전이니깐....\n  return (\n    <CovidDiv>\n      <ul>\n        {situation\n          ? situation.map((one) => (\n              <StyledLi\n                key={one.create_dt}\n                onClick={() => {\n                  console.log(\"clicked!\");\n                }}\n              >\n                {one.stateDt}의 코로나소식,\n                <br /> 누적확진자\n                {expressionList[Math.round(Math.random() * 10)]}\n                {one.decideCnt}\n                <br />\n                누적사망자\n                {expressionList[Math.round(Math.random() * 10)]}\n                {one.deathCnt}\n              </StyledLi>\n            ))\n          : \"COVID관련 정보 업데이트중 9AM 예정\"}\n      </ul>\n    </CovidDiv>\n  );\n};\nexport default Covid;\n","import React from \"react\";\n\nconst TodoItem = ({ updateHandle, deleteHandle, todo }) => {\n  // console.log(\"TodoItem:\", todo);\n  // python에서 받아온 data\n\n  return (\n    <li\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n      name={todo.created_date}\n    >\n      {`${todo.author} : => ${todo.description} ${todo.created_date}`}\n      <div style={{ display: \"flex\" }}>\n        <button\n          name={todo.created_date}\n          onClick={updateHandle}\n          style={{ margin: 1 }}\n          value={\"test_modify_button\"}\n        >\n          modify\n        </button>\n        <button\n          onClick={deleteHandle}\n          name={todo.created_date}\n          style={{ margin: 1 }}\n          value={\"test_delete_button\"}\n        >\n          delete\n        </button>\n      </div>\n    </li>\n  );\n};\nexport default TodoItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoItem from \"./TodoItem\";\n\nconst StyledUl_for_todo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 0;\n`;\n\nconst TodoList = ({ todo, deleteHandle, updateHandle }) => {\n  return (\n    <div>\n      <StyledUl_for_todo>\n        {/* https://medium.com/@leannezhang/curly-braces-versus-parenthesis-in-reactjs-4d3ffd33128f */}\n        {todo.map((one, idx) => {\n          return (\n            <TodoItem\n              key={idx}\n              todo={one}\n              deleteHandle={deleteHandle}\n              updateHandle={updateHandle}\n            />\n          );\n        })}\n      </StyledUl_for_todo>\n    </div>\n  );\n};\nexport default TodoList;\n","import styled from \"styled-components\";\n\nexport const StyledUl = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const StyledLi = styled.li`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  transition: transform 3s;\n  -webkit-transition: color 300ms linear;\n  -moz-transition: color 300ms linear;\n  -o-transition: color 300ms linear;\n  -ms-transition: color 300ms linear;\n  transition: color 300ms linear;\n  &:hover {\n    color: white;\n    text-decoration: underline wavy red;\n  }\n  @media only screen and (max-width: 450px) {\n    font-weight: 900;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  @media only screen and (max-width: 450px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const StyledInput = styled.input`\n    width:200px; \n    @media only screen and (max-width: 450px) {\n        width:${(props) => props.inputWidth + \"px\"};\n        margin: 0 0.5rem 0 0.5rem;\n`;\n\n// styled-component를 사용하기\nexport const StyledH1 = styled.h1`\n  color: #ffd7af;\n  margin: 0 0 0.5rem 0.5rem;\n  @media only screen and (max-width: 375px) {\n  }\n  // props를 이용하기\n`;\n// styled-component를 상속하기\nexport const H1ex = styled(StyledH1)`\n  background: #3a3a3a;\n  color: #84aa84;\n`;\n","import React, { useEffect, useState } from \"react\";\n\nexport const viewportContext = React.createContext({});\n\nexport const useViewport = () => {\n  const { width, height } = React.useContext(viewportContext);\n  return { width, height };\n};\n\nconst ViewportProvider = ({ children }) => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const handleWindowResize = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n  return (\n    <viewportContext.Provider value={{ width, height }}>\n      {children}\n    </viewportContext.Provider>\n  );\n};\nexport default ViewportProvider;\n","import React, { useEffect, useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { post, get } from \"axios\";\nimport styled from \"styled-components\";\nimport {\n  StyledForm,\n  StyledH1,\n  H1ex,\n  StyledInput,\n} from \"../css/styled_components/StyledComponents\";\nimport { useViewport } from \"../context/ViewportProvider\";\n\nconst StyledTodoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst TodoContainer = (props) => {\n  const [todo, setTodo] = useState([]);\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { width } = useViewport();\n\n  const handleAuthorChange = (e) => {\n    const author = e.target.value;\n    setAuthor(author);\n  };\n\n  const handleDescriptionChange = (e) => {\n    const newDescription = e.target.value;\n    setDescription(newDescription);\n  };\n\n  const postHandle = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"author\", author);\n    formData.append(\"description\", description);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    post(\"/api/insert\", formData, config).then((response) => {\n      setTodo(response.data);\n    });\n  };\n\n  const deleteHandle = (e) => {\n    e.preventDefault();\n    // li는 value가 무조건 number라는걸 잊지마라.\n    const name = e.target.getAttribute(\"name\");\n    const newTodos = todo.filter((one) => one.created_date !== name);\n    setTodo(() => newTodos);\n    fetch(`/api/delete?target=${name}`);\n  };\n\n  const updateHandle = (e) => {\n    e.preventDefault();\n  };\n\n  const selectAllTodos = (e) => {\n    e.preventDefault();\n    get(\"/api/selectAll\").then((response) => setTodo(() => response.data));\n  };\n  return (\n    <StyledTodoContainer>\n      <StyledH1>kandan Todo List</StyledH1>\n      <H1ex>write what you need to do!!</H1ex>\n      <StyledForm\n        style={{ display: \"flex\" }}\n        onSubmit={postHandle}\n        method=\"POST\"\n      >\n        <div>\n          <StyledInput\n            inputWidth={width - 30}\n            type=\"text\"\n            name=\"author\"\n            value={author}\n            onChange={handleAuthorChange}\n          />\n        </div>\n        <div>\n          <StyledInput\n            inputWidth={width - 30}\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"stretch\" }}>\n          <button type=\"submit\">todo 등록하기</button>\n          <button onClick={selectAllTodos}>todos</button>\n        </div>\n      </StyledForm>\n      <TodoList\n        todo={todo}\n        deleteHandle={deleteHandle}\n        updateHandle={updateHandle}\n      />\n    </StyledTodoContainer>\n  );\n};\nexport default TodoContainer;\n","export default __webpack_public_path__ + \"static/media/github.a95512d7.svg\";","export default __webpack_public_path__ + \"static/media/twitter.50c035ed.svg\";","export default __webpack_public_path__ + \"static/media/mail.f6a817f2.svg\";","import React from \"react\";\nimport github from \"../img/github.svg\";\nimport twitter from \"../img/twitter.svg\";\nimport mail from \"../img/mail.svg\";\nimport { StyledUl, StyledLi } from \"../css/styled_components/StyledComponents\";\nimport styled from \"styled-components\";\n\nconst ExStyledUl = styled(StyledUl)({\n  display: \"flex\",\n  flexDirection: \"row\",\n  backgroundColor: \"rgba(255,255,153,0.2)\",\n  borderRadius: \"10%\",\n  justifyContent: \"space-around\",\n});\nconst ExStyledLi = styled(StyledLi)({\n  margin: \"1vh\",\n});\n\nconst Contact = () => {\n  return (\n    <div>\n      <ExStyledUl className=\"contact\">\n        <ExStyledLi>\n          <a target=\"_\" href=\"https://github.com/sa82trip\">\n            <img src={github} alt=\"\" />\n          </a>\n        </ExStyledLi>\n        <ExStyledLi>\n          <a target=\"_\" href=\"https://twitter.com/vim_gil\">\n            <img src={twitter} alt=\"\" />\n          </a>\n        </ExStyledLi>\n        <ExStyledLi>\n          <a href=\"mailto:sa82trip@gmail.com\">\n            <img src={mail} alt=\"\" />\n          </a>\n        </ExStyledLi>\n      </ExStyledUl>\n    </div>\n  );\n};\nexport default Contact;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport allActions from \"../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport { StyledUl, StyledLi } from \"../css/styled_components/StyledComponents\";\nimport Contact from \"../components/Contact\";\n\n// import Contact from \"../components/Contact\";\n// styled-components는 무조건 대문자로 시작해야한다.\n\nconst StyledNav = styled.div`\n  border-bottom: 0.7rem solid #5f87af;\n  font-weight: bold;\n  margin: 0.5rem 0.5rem 0 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: space-around;\n  // position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  @media only screen and (min-width: 630px) {\n    align-items: space-around;\n  }\n`;\n\nconst Styleda = styled.a`\n  text-decoration: none;\n  color: #81a681;\n  font-size: 3vh;\n  font-weight: bold;\n  font-family: monospace;\n  transition: background 2s;\n  &:hover {\n    transform: rotate(360deg);\n    opacity: 30%;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  // color: rgba(94, 92, 230);\n  color: #81a681;\n  font-size: 3vh;\n  font-weight: bold;\n  font-family: monospace;\n  &:hover {\n    background: #e0eafc;\n    opacity: 30%;\n  }\n  &:active {\n    color: red;\n  }\n  @media only screen and (max-width: 430px) {\n  }\n`;\nconst StyledAppName = styled.div`\n  // color: #fcba03;\n  color: #bc5656;\n  font-size: 5rem;\n  padding: 0 0 1rem 0;\n  &:hover {\n    color: red;\n  }\n  @media only screen and (max-width: 430px) {\n    font-weight: 900;\n  }\n`;\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <StyledNav>\n        <StyledAppName>My Biseo</StyledAppName>\n        <div></div>\n        <StyledUl className=\"menu\">\n          <Styleda>\n            <StyledLink to=\"/\">\n              <StyledLi>MyBiseo</StyledLi>\n            </StyledLink>\n          </Styleda>\n          <Styleda\n            name=\"TODO\"\n            onClick={() => dispatch(allActions.setCurrentPage(\"TODO\"))}\n          >\n            <StyledLink to=\"/todo\">\n              <StyledLi>Todo</StyledLi>\n            </StyledLink>\n          </Styleda>\n          <Styleda\n            name=\"INFO\"\n            onClick={() => dispatch(allActions.setCurrentPage(\"INFO\"))}\n          >\n            <StyledLink to=\"/info\">\n              <StyledLi>info</StyledLi>\n            </StyledLink>\n          </Styleda>\n          <Contact />\n        </StyledUl>\n      </StyledNav>\n    </>\n  );\n};\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport Weather from \"./Weater\";\nimport Covid from \"./Covid\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport styled from \"styled-components\";\nimport Nav from \"./layout/Nav\";\nimport \"./css/app.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useViewport } from \"./context/ViewportProvider\";\n\nconst StyledHeaderDiv = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  color: orange;\n  padding: 1.5rem;\n  border: 2px yellow;\n`;\n\nconst StyledAppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-itmes: center;\n  // height: 100vh;\n  @media only screen and (max-width: 630px) {\n    background: #262626;\n    box-shadow: 3px 3px 5px black;\n    height: auto;\n  } // background: #aa4b6b; // background: -webkit-linear-gradient(to right, #3b8d99, #6b6b83, #aa4b6b) ; // background: linear-gradient(to right, #3b8d99, #6b6b83, #aa4b6b) ;\n`;\n\nconst StyledVideo = styled.video`\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  padding: none;\n  z-index: -1;\n  position: fixed; /* optional depending on what you want to do in your app */\n  filter: opacity(60%);\n`;\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const isLoading = useSelector((state) => state.isLoadingReducer);\n  const { height } = useViewport();\n\n  useEffect(() => {\n    fetch(\"/api/time\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setCurrentTime(data.time);\n      });\n  }, [isLoading, height]);\n\n  return (\n    <>\n      <Router>\n        <StyledVideo\n          loop\n          autoPlay\n          src=\"https://wedistill.io/uploads/videos/processed/1716/Northernlights2_HD.mp4.mp4\"\n        ></StyledVideo>\n        <div\n          className=\"whole\"\n          style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n        >\n          <div className=\"flex-left\"></div>\n          <div\n            className=\"app\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"row\",\n            }}\n          >\n            <StyledAppContainer\n              containerHeight={() => height - 10}\n              className=\"App\"\n            >\n              <Nav />\n              <Switch>\n                <Route path=\"/info\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <header className=\"App-header\">\n                      <p style={{ color: \"#d787af\" }}>\n                        The current time is {currentTime}.\n                      </p>\n                    </header>\n                    <Weather />\n                    <Covid />\n                  </div>\n                </Route>\n                <Route path=\"/todo\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <header className=\"App-header\">\n                      <p style={{ color: \"#d787af\" }}>\n                        The current time is {currentTime}.\n                      </p>\n                    </header>\n                    <TodoContainer />\n                  </div>\n                </Route>\n              </Switch>\n            </StyledAppContainer>\n          </div>\n          <div className=\"flex-right\"></div>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport ViewportProvider from \"./context/ViewportProvider\";\n\nconst Root = () => (\n  <ViewportProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ViewportProvider>\n);\n\nexport default Root;\n","const loadingStatusReducer = (state = true, action) => {\n  switch (action.type) {\n    case \"REVERSE\": {\n      return { status: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default loadingStatusReducer;\n","const currentPageReducer = (state = \"HOME\", action) => {\n  switch (action.type) {\n    case \"HOME\":\n      return \"HOME\";\n    case \"TODO\":\n      console.log(\"reducer todo\");\n      return \"TODO\";\n    case \"INFO\":\n      return \"INFO\";\n    default:\n      return state;\n  }\n};\n\nexport default currentPageReducer;\n","import { combineReducers } from \"redux\";\nimport isLoadingReducer from \"./isLoadingReducer\";\nimport currentPageReducer from \"./currentPageReducer\";\n\nconst rootReducer = combineReducers({ isLoadingReducer, currentPageReducer });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./Root\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n//redux를 크롬 개발자 모드에서 보기 편하게 해준다.\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}