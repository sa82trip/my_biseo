{"version":3,"sources":["actions/index.js","actions/isLoadingActions.js","actions/currentPage.js","Weater.js","Covid.js","components/TodoItem.js","components/TodoList.js","components/TodoContainer.js","img/diary.svg","img/github.svg","img/twitter.svg","img/mail.svg","layout/Nav.js","App.js","Root.js","reducers/isLoadingReducer.js","reducers/currentPageReducer.js","reducers/index.js","index.js"],"names":["allActions","isLoadingActions","reverse_status","console","log","type","setCurrentPage","currentPage","Weather","useState","data","setData","isLoading","useSelector","state","isLoadingReducer","dispatch","useDispatch","localStatus","setLocalStatus","lon","setLon","lat","setLat","useEffect","navigator","geolocation","getCurrentPosition","loc","coords","longitude","toString","latitude","fetch","then","res","json","className","style","color","margin","description","CovidDiv","styled","div","StyledLi","li","expressionList","Covid","situation","setSituation","response","body","items","item","result","slice","catch","error","map","one","stateDt","Math","round","random","decideCnt","deathCnt","create_dt","TodoItem","updateHandle","deleteHandle","todo","name","created_date","author","onClick","value","TodoList","idx","H1","h1","H1ex","StyledTodoContainer","TodoContainer","props","setTodo","setAuthor","setDescription","display","onSubmit","e","preventDefault","formData","FormData","append","post","headers","onChange","target","newDescription","get","getAttribute","newTodos","filter","StyledNav","StyledUl","ul","Styleda","a","StyledLink","Link","StyledAppName","Nav","src","diary","alt","width","flexDirection","justifyContent","href","github","twitter","mail","to","StyledAppContainer","App","currentTime","setCurrentTime","time","path","marginTop","Root","loadingStatusReducer","action","status","currentPageReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"oPAQeA,EALI,CACjBC,iBCGa,CACbC,eARqB,WAErB,OADAC,QAAQC,IAAI,WACL,CACLC,KAAM,aDERC,eELqB,SAACC,GAEtB,OADAJ,QAAQC,IAAI,eAAgBG,GACrB,CACLF,KAAME,KC+CKC,G,MA7CC,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,KAEdC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,oBACzCC,EAAWC,cAHG,EAIkBR,oBAAS,GAJ3B,mBAIbS,EAJa,KAIAC,EAJA,OAKEV,mBAAS,IALX,mBAKbW,EALa,KAKRC,EALQ,OAMEZ,mBAAS,IANX,mBAMba,EANa,KAMRC,EANQ,KAmCpB,OAzBAC,qBAAU,WAUR,GATI,gBAAiBC,UACnBtB,QAAQC,IAAI,aAEZD,QAAQC,IAAI,iBAEdqB,UAAUC,YAAYC,oBAAmB,SAACC,GACxCP,GAAO,kBAAMO,EAAIC,OAAOC,UAAUC,cAClCR,GAAO,kBAAMK,EAAIC,OAAOG,SAASD,iBAE/BT,GAAOF,EACMa,MAAM,oBAAD,OAAqBb,EAArB,gBAAgCE,IAAOY,MAAK,SAACC,GAAD,OAC9DA,EACGC,OACAF,MAAK,SAACxB,GACLC,EAAQD,MAETwB,MAAK,WACJlB,EAAShB,EAAWC,iBAAiBC,kBACrCiB,EAAeP,EAAS,gBAI/B,CAACU,EAAKF,IAELF,EAAoB,qBAAKmB,UAAU,WAErC,qBAAKC,MAAO,CAAEC,MAAO,sBAAuBC,OAAQ,OAApD,SACG9B,EAAI,UACEA,EAAI,KADN,iCACwBA,EAAI,QAAY,GAAG+B,aAC5C,wE,uOC1CV,IAAMC,EAAWC,IAAOC,IAAV,KAMRC,EAAWF,IAAOG,GAAV,KAGRC,EAAiB,CACrB,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,gBA0CaC,EAvCD,WAAO,IAAD,EACgBvC,mBAAS,IADzB,mBACXwC,EADW,KACAC,EADA,KAkBlB,OAfA1B,qBAAU,WACRS,MAAM,cACHC,MAAK,SAACC,GACLA,EAAIC,OAAOF,MAAK,SAACxB,GACfP,QAAQC,IAAIM,EAAKyC,SAASC,KAAKC,MAAMC,MACrC,IAAMC,EAAS7C,EAAKyC,SAASC,KAAKC,MAAMC,KACxCJ,GAAa,kBAAMK,EAAOC,MAAM,EAAG,MACnCrD,QAAQC,IAAImD,SAGfE,OAAM,SAACC,GACNvD,QAAQuD,MAAM,QAASA,QAE1B,IAGD,cAAChB,EAAD,UACE,6BACGO,EACGA,EAAUU,KAAI,SAACC,GAAD,OACZ,eAACf,EAAD,WACGe,EAAIC,QADP,yCAEE,uBAFF,kCAGGd,EAAee,KAAKC,MAAsB,GAAhBD,KAAKE,WAC/BJ,EAAIK,UACL,uBALF,iCAOGlB,EAAee,KAAKC,MAAsB,GAAhBD,KAAKE,WAC/BJ,EAAIM,WARQN,EAAIO,cAWrB,eC/BGC,EA1BE,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KAI9C,OAHApE,QAAQC,IAAI,YAAamE,GAIvB,qBAAIjC,MAAO,CAAEC,MAAO,SAAWiC,KAAMD,EAAKE,aAA1C,oBACMF,EAAKG,OADX,iBAC0BH,EAAK9B,YAD/B,YAC8C8B,EAAKE,cACjD,wBACED,KAAMD,EAAKE,aACXE,QAASN,EACT/B,MAAO,CAAEE,OAAQ,GACjBoC,MAAO,qBAJT,oBAQA,wBACED,QAASL,EACTE,KAAMD,EAAKE,aACXnC,MAAO,CAAEE,OAAQ,GACjBoC,MAAO,qBAJT,wBCKSC,EAnBE,SAAC,GAA0C,IAAxCN,EAAuC,EAAvCA,KAAMD,EAAiC,EAAjCA,aAAcD,EAAmB,EAAnBA,aACtC,OACE,8BACE,6BAEGE,EAAKZ,KAAI,SAACC,EAAKkB,GACd,OACE,cAAC,EAAD,CAEEP,KAAMX,EACNU,aAAcA,EACdD,aAAcA,GAHTS,W,waCLnB,IAAMC,EAAKpC,IAAOqC,GAAV,KAMFC,EAAOtC,YAAOoC,EAAPpC,CAAH,KAKJuC,EAAsBvC,IAAOC,IAAV,KA4FVuC,EAtFO,SAACC,GAAW,IAAD,EACP3E,mBAAS,IADF,mBACxB8D,EADwB,KAClBc,EADkB,OAEH5E,mBAAS,IAFN,mBAExBiE,EAFwB,KAEhBY,EAFgB,OAGO7E,mBAAS,IAHhB,mBAGxBgC,EAHwB,KAGX8C,EAHW,KAsD/B,OACE,eAACL,EAAD,WACE,cAACH,EAAD,+BACA,cAACE,EAAD,0CACA,uBAAM3C,MAAO,CAAEkD,QAAS,QAAUC,SA3CnB,SAACC,GAClBA,EAAEC,iBACFxF,QAAQC,IAAI,SACZ,IAAMwF,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUpB,GAC1BkB,EAASE,OAAO,cAAerD,GAC/BtC,QAAQC,IAAIwF,GAMZG,eAAK,UAAWH,EALD,CACbI,QAAS,CACP,eAAgB,yBAGc9D,MAAK,SAACiB,GACtChD,QAAQC,IAAI+C,GACZkC,EAAQlC,EAASzC,UA6BjB,UACE,8BACE,uBACEL,KAAK,OACLmE,KAAK,SACLI,MAAOF,EACPuB,SA3DiB,SAACP,GAC1B,IAAMhB,EAASgB,EAAEQ,OAAOtB,MACxBU,EAAUZ,QA4DN,8BACE,uBACErE,KAAK,OACLmE,KAAK,cACLI,MAAOnC,EACPwD,SA9DsB,SAACP,GAC/B,IAAMS,EAAiBT,EAAEQ,OAAOtB,MAChCW,EAAeY,QA+DX,wBAAQ9F,KAAK,SAAb,2CACA,wBAAQsE,QA3BS,SAACe,GACtBA,EAAEC,iBACFxF,QAAQC,IAAI,cACZgG,cAAI,kBAAkBlE,MAAK,SAACiB,GAAD,OAAckC,GAAQ,kBAAMlC,EAASzC,YAwB5D,sBAEF,cAAC,EAAD,CACE6D,KAAMA,EACND,aA/Ce,SAACoB,GACpBA,EAAEC,iBAEF,IAAMnB,EAAOkB,EAAEQ,OAAOG,aAAa,QACnClG,QAAQC,IAAIoE,GACZ,IAAM8B,EAAW/B,EAAKgC,QAAO,SAAC3C,GAAD,OAASA,EAAIa,eAAiBD,KAC3DrE,QAAQC,IAAIkG,GACZjB,GAAQ,kBAAMiB,KACdrE,MAAM,kBAAD,OAAmBuC,KAwCpBH,aArCe,SAACqB,GACpBA,EAAEC,iBACFxF,QAAQC,IAAI,mBCrED,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,iC,g5CCWzC,IAAMoG,EAAY7D,IAAOC,IAAV,KAaT6D,EAAW9D,IAAO+D,GAAV,KASR7D,EAAWF,IAAOG,GAAV,KAKR6D,EAAUhE,IAAOiE,EAAV,KAePC,EAAalE,YAAOmE,IAAPnE,CAAH,KAcVoE,EAAgBpE,IAAOC,IAAV,KAsEJoE,EA7DH,WACV,IAAMhG,EAAWC,cACjB,OACE,mCACE,eAACuF,EAAD,WACE,gCACE,qBAAKS,IAAKC,EAAOC,IAAI,GAAG7E,MAAO,CAAE8E,MAAO,UACxC,eAACX,EAAD,CACEnE,MAAO,CACLkD,QAAS,OACT6B,cAAe,MACfC,eAAgB,gBAJpB,UAOE,cAAC,EAAD,UACE,mBAAGpB,OAAO,IAAIqB,KAAK,8BAAnB,SACE,qBAAKN,IAAKO,EAAQL,IAAI,SAG1B,cAAC,EAAD,UACE,mBAAGjB,OAAO,IAAIqB,KAAK,8BAAnB,SACE,qBAAKN,IAAKQ,EAASN,IAAI,SAG3B,cAAC,EAAD,UACE,mBAAGI,KAAK,4BAAR,SACE,qBAAKN,IAAKS,EAAMP,IAAI,eAK5B,cAACJ,EAAD,yBACA,eAACN,EAAD,WACE,cAACE,EAAD,CAAST,OAAO,IAAIqB,KAAK,8BAAzB,SACE,cAAC,EAAD,uBAEF,cAACZ,EAAD,UACE,cAAC,EAAD,yBAEF,cAACA,EAAD,CACEnC,KAAK,OACLG,QAAS,kBAAM3D,EAAShB,EAAWM,eAAe,UAFpD,SAIE,cAACuG,EAAD,CAAYc,GAAG,QAAf,SACE,cAAC,EAAD,uBAGJ,cAAChB,EAAD,CACEnC,KAAK,OACLG,QAAS,kBAAM3D,EAAShB,EAAWM,eAAe,UAFpD,SAIE,cAACuG,EAAD,CAAYc,GAAG,QAAf,SACE,cAAC,EAAD,gC,ugBCtHUhF,IAAOC,IAAV,KAArB,IAQMgF,EAAqBjF,IAAOC,IAAV,KAwETiF,MA9Df,WAAgB,IAAD,EACyBpH,mBAAS,IADlC,mBACNqH,EADM,KACOC,EADP,KAEPnH,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,oBAc/C,OAbiBE,cAEjBO,qBAAU,WACRrB,QAAQC,IAAI,YAAaQ,GACzBqB,MAAM,aACHC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACxB,GACLqH,EAAerH,EAAKsH,WAEvB,CAACpH,IAGF,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAACgH,EAAD,CAAoBvF,UAAU,MAA9B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4F,KAAK,QAAZ,SACE,sBACE3F,MAAO,CACLkD,QAAS,OACT6B,cAAe,SACfD,MAAO,SAJX,UAOE,wBAAQ9E,MAAO,CAAE4F,UAAW,QAAU7F,UAAU,aAAhD,SACE,oBAAGC,MAAO,CAAEC,MAAO,uBAAnB,iCACuBuF,EADvB,SAIF,cAAC,EAAD,IACA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAOG,KAAK,QAAZ,SACE,sBACE3F,MAAO,CACLkD,QAAS,OACT6B,cAAe,SACfD,MAAO,SAJX,UAOE,wBAAQ9E,MAAO,CAAE4F,UAAW,QAAU7F,UAAU,aAAhD,SACE,oBAAGC,MAAO,CAAEC,MAAO,uBAAnB,iCACuBuF,EADvB,SAIF,cAAC,EAAD,oBCvEDK,EANF,kBACX,cAAC,IAAD,UACE,cAAC,EAAD,O,QCMWC,GAXc,WAA2B,IAA1BtH,IAAyB,yDAAXuH,EAAW,uCACrD,OAAQA,EAAOhI,MACb,IAAK,UACH,MAAO,CAAEiI,QAAQ,GAEnB,QACE,OAAOxH,ICQEyH,GAdY,WAA6B,IAA5BzH,EAA2B,uDAAnB,OAAQuH,EAAW,uCACrD,OAAQA,EAAOhI,MACb,IAAK,OACH,MAAO,OACT,IAAK,OAEH,OADAF,QAAQC,IAAI,gBACL,OACT,IAAK,OACH,MAAO,OACT,QACE,OAAOU,ICJE0H,GAFKC,0BAAgB,CAAE1H,oBAAkBwH,wB,SCMlDG,GAAQC,sBAAYH,GAAaI,+BAAoBC,8BAE3DC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.e6718a1a.chunk.js","sourcesContent":["import isLoadingActions from \"./isLoadingActions\";\nimport setCurrentPage from \"./currentPage\";\n\nconst allActions = {\n  isLoadingActions,\n  setCurrentPage,\n};\n\nexport default allActions;\n","const reverse_status = () => {\n  console.log(\"reverse\");\n  return {\n    type: \"REVERSE\",\n  };\n};\n\nexport default {\n  reverse_status,\n};\n","const setCurrentPage = (currentPage) => {\n  console.log(\"current page\", currentPage);\n  return {\n    type: currentPage,\n  };\n};\nexport default setCurrentPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"./actions/index\";\nimport loading from \"./css/loading.css\";\n\nconst Weather = () => {\n  const [data, setData] = useState(\"\");\n  const isLoading = useSelector((state) => state.isLoadingReducer);\n  const dispatch = useDispatch();\n  const [localStatus, setLocalStatus] = useState(true);\n  const [lon, setLon] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n\n  // 일단 도시 이름 나오게 함\n  // fetch and axios take response in different way\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      console.log(\"Available\");\n    } else {\n      console.log(\"Not Available\");\n    }\n    navigator.geolocation.getCurrentPosition((loc) => {\n      setLon(() => loc.coords.longitude.toString());\n      setLat(() => loc.coords.latitude.toString());\n    });\n    if (lat && lon) {\n      const result = fetch(`/api/weather?lon=${lon}&lat=${lat}`).then((res) =>\n        res\n          .json()\n          .then((data) => {\n            setData(data);\n          })\n          .then(() => {\n            dispatch(allActions.isLoadingActions.reverse_status());\n            setLocalStatus(isLoading[\"status\"]);\n          })\n      );\n    }\n  }, [lat, lon]);\n\n  if (localStatus) return <div className=\"loader\"></div>;\n  return (\n    <div style={{ color: \"rgba(229, 229, 234)\", margin: \"1em\" }}>\n      {data\n        ? `${data[\"name\"]}의 날씨 : ${data[\"weather\"][0].description}`\n        : \"현재 날씨 정보 알 수 없음\"}\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst CovidDiv = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  color: #c7c7cc;\n`;\n\nconst StyledLi = styled.li`\n  decoration: none;\n`;\nconst expressionList = [\n  \"🚑\",\n  \"🚠\",\n  \"❌\",\n  \"❗\",\n  \"💉\",\n  \"💊\",\n  \"🥵\",\n  \"😱\",\n  \"🤧\",\n  \"🙀\",\n];\n\nconst Covid = () => {\n  const [situation, setSituation] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/covid\")\n      .then((res) => {\n        res.json().then((data) => {\n          console.log(data.response.body.items.item);\n          const result = data.response.body.items.item;\n          setSituation(() => result.slice(0, 1));\n          console.log(result);\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error\", error);\n      });\n  }, []);\n  // 계속 에러가 난 이유는... 진짜 받아오기 전이니깐....\n  return (\n    <CovidDiv>\n      <ul>\n        {situation\n          ? situation.map((one) => (\n              <StyledLi key={one.create_dt}>\n                {one.stateDt}의 코로나소식,\n                <br /> 누적확진자\n                {expressionList[Math.round(Math.random() * 10)]}\n                {one.decideCnt}\n                <br />\n                누적사망자\n                {expressionList[Math.round(Math.random() * 10)]}\n                {one.deathCnt}\n              </StyledLi>\n            ))\n          : \"no data\"}\n      </ul>\n    </CovidDiv>\n  );\n};\nexport default Covid;\n","import React from \"react\";\n\nconst TodoItem = ({ updateHandle, deleteHandle, todo }) => {\n  console.log(\"TodoItem:\", todo);\n  // python에서 받아온 data\n\n  return (\n    <li style={{ color: \"white\" }} name={todo.created_date}>\n      {`${todo.author} : => ${todo.description} ${todo.created_date}`}\n      <button\n        name={todo.created_date}\n        onClick={updateHandle}\n        style={{ margin: 1 }}\n        value={\"test_modify_button\"}\n      >\n        modify\n      </button>\n      <button\n        onClick={deleteHandle}\n        name={todo.created_date}\n        style={{ margin: 1 }}\n        value={\"test_delete_button\"}\n      >\n        delete\n      </button>\n    </li>\n  );\n};\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ todo, deleteHandle, updateHandle }) => {\n  return (\n    <div>\n      <ul>\n        {/* https://medium.com/@leannezhang/curly-braces-versus-parenthesis-in-reactjs-4d3ffd33128f */}\n        {todo.map((one, idx) => {\n          return (\n            <TodoItem\n              key={idx}\n              todo={one}\n              deleteHandle={deleteHandle}\n              updateHandle={updateHandle}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { post, get } from \"axios\";\nimport styled from \"styled-components\";\n\n// styled-component를 사용하기\nconst H1 = styled.h1`\n  color: gray;\n  margin: 2px;\n  // props를 이용하기\n`;\n// styled-component를 상속하기\nconst H1ex = styled(H1)`\n  background: gray;\n  color: white;\n`;\n\nconst StyledTodoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 620px;\n`;\nconst TodoContainer = (props) => {\n  const [todo, setTodo] = useState([]);\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleAuthorChange = (e) => {\n    const author = e.target.value;\n    setAuthor(author);\n  };\n\n  const handleDescriptionChange = (e) => {\n    const newDescription = e.target.value;\n    setDescription(newDescription);\n  };\n\n  const postHandle = (e) => {\n    e.preventDefault();\n    console.log(\"enter\");\n    const formData = new FormData();\n    formData.append(\"author\", author);\n    formData.append(\"description\", description);\n    console.log(formData);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    post(\"/insert\", formData, config).then((response) => {\n      console.log(response);\n      setTodo(response.data);\n    });\n  };\n\n  const deleteHandle = (e) => {\n    e.preventDefault();\n    // li는 value가 무조건 number라는걸 잊지마라.\n    const name = e.target.getAttribute(\"name\");\n    console.log(name);\n    const newTodos = todo.filter((one) => one.created_date !== name);\n    console.log(newTodos);\n    setTodo(() => newTodos);\n    fetch(`/delete?target=${name}`);\n  };\n\n  const updateHandle = (e) => {\n    e.preventDefault();\n    console.log(\"madamada\");\n  };\n\n  const selectAllTodos = (e) => {\n    e.preventDefault();\n    console.log(\"request!!!\");\n    get(\"/api/selectAll\").then((response) => setTodo(() => response.data));\n  };\n  return (\n    <StyledTodoContainer>\n      <H1>kandan Todo List</H1>\n      <H1ex>write what you need to do!!</H1ex>\n      <form style={{ display: \"flex\" }} onSubmit={postHandle}>\n        <div>\n          <input\n            type=\"text\"\n            name=\"author\"\n            value={author}\n            onChange={handleAuthorChange}\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <button type=\"submit\">todo 등록하기</button>\n        <button onClick={selectAllTodos}>todos</button>\n      </form>\n      <TodoList\n        todo={todo}\n        deleteHandle={deleteHandle}\n        updateHandle={updateHandle}\n      />\n    </StyledTodoContainer>\n  );\n};\nexport default TodoContainer;\n","export default __webpack_public_path__ + \"static/media/diary.dd671c76.svg\";","export default __webpack_public_path__ + \"static/media/github.a95512d7.svg\";","export default __webpack_public_path__ + \"static/media/twitter.50c035ed.svg\";","export default __webpack_public_path__ + \"static/media/mail.f6a817f2.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport allActions from \"../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport diary from \"../img/diary.svg\";\nimport github from \"../img/github.svg\";\nimport twitter from \"../img/twitter.svg\";\nimport mail from \"../img/mail.svg\";\n\n// styled-components는 무조건 대문자로 시작해야한다.\nconst StyledNav = styled.div`\n  border-bottom: 1px solid white;\n  font-weight: bold;\n  margin: 0.5rem 0 0 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst StyledUl = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n`;\n\nconst StyledLi = styled.li`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\nconst Styleda = styled.a`\n  text-decoration: none;\n  background-color: black;\n  color: rgba(94, 92, 230);\n  font-size: 3vh;\n  font-weight: bold;\n  font-family: monospace;\n  transition: background 2s;\n  &:hover {\n    transform: rotate(360deg);\n    background: #e0eafc;\n    opacity: 30%;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(94, 92, 230);\n  font-size: 3vh;\n  font-weight: bold;\n  font-family: monospace;\n  &:hover {\n    background: #e0eafc;\n    opacity: 30%;\n  }\n  &:active {\n    color: red;\n  }\n`;\nconst StyledAppName = styled.div`\n  color: #fcba03;\n  font-size: 5rem;\n  padding: 0 0 1rem 0;\n  &:hover {\n    color: red;\n  }\n`;\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <StyledNav>\n        <div>\n          <img src={diary} alt=\"\" style={{ width: \"5rem\" }} />\n          <StyledUl\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <StyledLi>\n              <a target=\"_\" href=\"https://github.com/sa82trip\">\n                <img src={github} alt=\"\" />\n              </a>\n            </StyledLi>\n            <StyledLi>\n              <a target=\"_\" href=\"https://twitter.com/vim_gil\">\n                <img src={twitter} alt=\"\" />\n              </a>\n            </StyledLi>\n            <StyledLi>\n              <a href=\"mailto:sa82trip@gmail.com\">\n                <img src={mail} alt=\"\" />\n              </a>\n            </StyledLi>\n          </StyledUl>\n        </div>\n        <StyledAppName> My Biseo </StyledAppName>\n        <StyledUl>\n          <Styleda target=\"_\" href=\"https://github.com/sa82trip\">\n            <StyledLi>github</StyledLi>\n          </Styleda>\n          <Styleda>\n            <StyledLi>My Biseo</StyledLi>\n          </Styleda>\n          <Styleda\n            name=\"TODO\"\n            onClick={() => dispatch(allActions.setCurrentPage(\"TODO\"))}\n          >\n            <StyledLink to=\"/todo\">\n              <StyledLi>Todo</StyledLi>\n            </StyledLink>\n          </Styleda>\n          <Styleda\n            name=\"INFO\"\n            onClick={() => dispatch(allActions.setCurrentPage(\"INFO\"))}\n          >\n            <StyledLink to=\"/info\">\n              <StyledLi>info</StyledLi>\n            </StyledLink>\n          </Styleda>\n        </StyledUl>\n      </StyledNav>\n    </>\n  );\n};\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport Weather from \"./Weater\";\nimport Covid from \"./Covid\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport styled from \"styled-components\";\nimport Nav from \"./layout/Nav\";\nimport \"./css/app.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst StyledHeaderDiv = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  color: orange;\n  padding: 1.5rem;\n  border: 2px yellow;\n`;\n\nconst StyledAppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-itmes: stretch;\n  height: 100vh;\n  background: #aa4b6b;\n  background: -webkit-linear-gradient(to right, #3b8d99, #6b6b83, #aa4b6b);\n  background: linear-gradient(to right, #3b8d99, #6b6b83, #aa4b6b);\n`;\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const isLoading = useSelector((state) => state.isLoadingReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"isLoading\", isLoading);\n    fetch(\"/api/time\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setCurrentTime(data.time);\n      });\n  }, [isLoading]);\n\n  return (\n    <>\n      <Router>\n        <Nav />\n        <StyledAppContainer className=\"App\">\n          <Switch>\n            <Route path=\"/info\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  width: \"620px\",\n                }}\n              >\n                <header style={{ marginTop: \"9rem\" }} className=\"App-header\">\n                  <p style={{ color: \"rgba(229, 229, 234)\" }}>\n                    The current time is {currentTime}.\n                  </p>\n                </header>\n                <Weather />\n                <Covid />\n              </div>\n            </Route>\n            <Route path=\"/todo\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  width: \"620px\",\n                }}\n              >\n                <header style={{ marginTop: \"9rem\" }} className=\"App-header\">\n                  <p style={{ color: \"rgba(229, 229, 234)\" }}>\n                    The current time is {currentTime}.\n                  </p>\n                </header>\n                <TodoContainer />\n              </div>\n            </Route>\n          </Switch>\n        </StyledAppContainer>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nexport default Root;\n","const loadingStatusReducer = (state = true, action) => {\n  switch (action.type) {\n    case \"REVERSE\": {\n      return { status: false };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default loadingStatusReducer;\n","const currentPageReducer = (state = \"HOME\", action) => {\n  switch (action.type) {\n    case \"HOME\":\n      return \"HOME\";\n    case \"TODO\":\n      console.log(\"reducer todo\");\n      return \"TODO\";\n    case \"INFO\":\n      return \"INFO\";\n    default:\n      return state;\n  }\n};\n\nexport default currentPageReducer;\n","import { combineReducers } from \"redux\";\nimport isLoadingReducer from \"./isLoadingReducer\";\nimport currentPageReducer from \"./currentPageReducer\";\n\nconst rootReducer = combineReducers({ isLoadingReducer, currentPageReducer });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./Root\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n//redux를 크롬 개발자 모드에서 보기 편하게 해준다.\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}